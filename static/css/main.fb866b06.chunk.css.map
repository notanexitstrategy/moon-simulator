{"version":3,"sources":["main.fb866b06.chunk.css","webpack://src/styles/utilities/variables.scss","webpack://src/styles/components/app.scss","webpack://src/styles/utilities/themes.scss","webpack://src/styles/utilities/mixins.scss","webpack://src/styles/components/button.scss","webpack://src/styles/components/chart.scss","webpack://src/styles/components/input.scss"],"names":[],"mappings":"AAAA,yFAAyF,CCAjF,KAAA,WCCN,CAAA,KAGF,QACE,CAAA,kCACA,CAAA,iCACA,CACA,oBACA,CADA,YACA,CAAA,6BAAA,CAAA,qBACA,CAAA,WAHA,eAUA,CAPA,MAGF,gBACE,CADF,QACE,CACA,eACA,CAAA,8BAAA,CAAA,sBACA,CAAA,EAGF,uBACE,CADF,oBACE,CAAA,sBAAA,CAAA,kBACA,CAAA,eAIA,eAGA,CAAA,qBAJF,gBACE,CADF,QACE,CACA,eACA,CAAA,8BAAA,CAAA,sBAcA,CAbA,MAGF,8BD9BQ,CAAA,iBCkCN,CAGA,qCACA,CADA,6BACA,CAAA,iBAEA,CAAA,kBCzBE,kBACE,CAAA,mBADF,kBACE,CAAA,kBADF,aACE,CAAA,mBADF,UACE,CAAA,2BCmCJ,MFrBF,sBAaI,CAAA,CAAA,wBEQF,MFrBF,sBAiBI,CAAA,CAAA,OAIJ,SACE,CAAA,KAGF,aACE,CAAA,2BELA,KFIF,UAII,CAAA,CAAA,wBERF,KFIF,UAQI,CAAA,CAAA,WAGF,oBACE,CADF,YACE,CAAA,sBACA,CADA,cACA,CAAA,0BACA,CADA,kBACA,CAAA,8BACA,CADA,sBACA,CAAA,gBACA,CAAA,2BEpBF,WFeA,gBAQI,CAAA,CAAA,wBEvBJ,WFeA,cAYI,CAAA,CAAA,gBAGF,eACE,CAAA,2BACA,CADA,mBACA,CAAA,aACA,CAAA,2BEjCJ,aFoCE,gBAEI,CAAA,CAAA,eAKN,oBACE,CADF,YACE,CAAA,6BACA,CADA,qBACA,CAAA,0BACA,CADA,kBACA,CAAA,8BACA,CADA,sBACA,CAAA,eACA,CAAA,qBACA,CAAA,8BAEA,gBACE,CAAA,2BEpDJ,8BFmDE,gBAII,CAAA,CAAA,wBEvDN,8BFmDE,cAQI,CAAA,CAAA,iDC/FJ,aACE,CAAA,kDADF,aACE,CAAA,kBDsGF,eACE,CAAA,SACA,CAAA,aACA,CAAA,qBAEA,eACE,CAAA,2BEzEN,qBFwEI,gBAII,CAAA,gBACA,CAAA,CAAA,wBE7ER,qBFwEI,cASI,CAAA,gBACA,CAAA,CAAA,4BAGF,YACE,CAAA,kBACA,CAAA,WG5IV,sBACE,CAAA,4BAEA,CAAA,SACA,CAAA,8BJFM,CAAA,cIIN,CAAA,uBFWE,aACE,CAAA,wBADF,UACE,CAAA,2BCmCJ,WCrDF,iBASI,CAAA,QACA,CAAA,UACA,CAAA,CAAA,wBD0CF,WCrDF,cAeI,CAAA,QACA,CAAA,UACA,CAAA,CAAA,iBAGF,YACE,CAEA,sBACA,CAAA,eAGF,WACE,CAAA,2BDyBF,eC1BA,UAII,CAAA,CAAA,wBDsBJ,eC1BA,WAQI,CAAA,CAAA,kBCnCN,gBACE,CAAA,MCDF,sBACE,CAAA,WAEA,CAAA,iBACA,CAAA,8BACA,CAAA,WACA,CAAA,aACA,CAAA,kBJUE,aACE,CAAA,mBADF,UACE,CAAA,YITJ,YACE,CAAA,mCAGE,UACE,CAAA,+CJGJ,wBACE,CAAA,gDADF,qBACE,CAAA,OIGN,iBACE,CAAA,wBAEA,iBACE,CAAA,OACA,CAAA,MACA,CAAA,uBACA,CAAA,UACA,CAAA,qBACA,CAAA,SACA,CAAA,mBACA,CAAA,8BAEA,UACE,CAAA,iBACA,CAAA,KACA,CAAA,MACA,CAAA,OACA,CAAA,WACA,CAAA,qBACA,CAAA,SACA,CAAA,8BACA,CAAA,oDAIA,UACE,CAAA,8BACA,CAAA,mBAKN,iBACE,CAAA,cACA,CAAA,oBAEA,CAAA,+BJzCA,aACE,CAAA,gCADF,aACE","file":"main.fb866b06.chunk.css","sourcesContent":["@import url(https://fonts.googleapis.com/css2?family=Rubik:wght@400;500;600&display=swap);\nhtml{height:100%}body{margin:0;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;min-height:100%;display:-webkit-flex;display:flex;-webkit-flex-direction:column;flex-direction:column}#root{-webkit-flex:1 1;flex:1 1;min-height:100%;display:inherit;-webkit-flex-direction:inherit;flex-direction:inherit}p{-webkit-margin-before:0;margin-block-start:0;-webkit-margin-after:0;margin-block-end:0}.app-container{-webkit-flex:1 1;flex:1 1;min-height:100%;display:inherit;-webkit-flex-direction:inherit;flex-direction:inherit}.page{font-family:\"Rubik\",sans-serif;text-align:center;-webkit-flex:1 1;flex:1 1;display:inherit;-webkit-flex-direction:inherit;flex-direction:inherit;-webkit-justify-content:space-between;justify-content:space-between;position:relative}.theme-dark .page{background:#202124}.theme-light .page{background:#f9f9f9}.theme-dark .page{color:#e8eaed}.theme-light .page{color:#000}@media(max-width: 767.98px){.page{padding:15vh 24px 32px 24px}}@media(min-width: 768px){.page{padding:15vh 10vw 32px 10vw}}.error{color:red}form{margin:0 auto}@media(max-width: 767.98px){form{width:100%}}@media(min-width: 768px){form{width:70vw}}form .form{display:-webkit-flex;display:flex;-webkit-flex-wrap:wrap;flex-wrap:wrap;-webkit-align-items:center;align-items:center;-webkit-justify-content:center;justify-content:center;line-height:200%}@media(max-width: 575.98px){form .form{font-size:1.5rem}}@media(min-width: 576px){form .form{font-size:2rem}}form .form span{display:inherit;-webkit-align-items:inherit;align-items:inherit;margin:0 .7ch}@media(max-width: 575.98px){form .form p{line-height:170%}}form .earnings{display:-webkit-flex;display:flex;-webkit-flex-direction:column;flex-direction:column;-webkit-align-items:center;align-items:center;-webkit-justify-content:center;justify-content:center;margin-top:10vh;word-break:break-word}form .earnings .stonks-go-brr{line-height:200%}@media(max-width: 575.98px){form .earnings .stonks-go-brr{font-size:2.2rem}}@media(min-width: 576px){form .earnings .stonks-go-brr{font-size:3rem}}.theme-dark form .earnings .stonks-go-brr strong{color:#23ce6b}.theme-light form .earnings .stonks-go-brr strong{color:#06bcc1}form .earnings ul{list-style:none;padding:0;margin:4rem 0}form .earnings ul li{text-align:left}@media(max-width: 575.98px){form .earnings ul li{font-size:1.5rem;line-height:200%}}@media(min-width: 576px){form .earnings ul li{font-size:2rem;line-height:300%}}form .earnings ul li::before{content:\"ðŸš€\";padding-right:1rem}.btn-theme{background:transparent;border:1px solid transparent;padding:0;font-family:\"Rubik\",sans-serif;cursor:pointer}.theme-dark .btn-theme{color:#e8eaed}.theme-light .btn-theme{color:#000}@media(max-width: 575.98px){.btn-theme{position:absolute;top:24px;right:24px}}@media(min-width: 576px){.btn-theme{position:fixed;top:40px;right:40px}}.btn-theme:focus{outline:none;border-style:dashed;border-width:1px;border-color:gray}.btn-theme img{height:auto}@media(max-width: 575.98px){.btn-theme img{width:80px}}@media(min-width: 576px){.btn-theme img{width:100px}}.recharts-surface{overflow:visible}input{background:transparent;border:none;font-size:inherit;transition:all 100ms ease-in-out;padding:4px;min-width:2ch}.theme-dark input{color:#e8eaed}.theme-light input{color:#000}input:focus{outline:none}input:focus+.input-underline::after{width:100%}.theme-dark input:focus+.input-underline::after{background-color:#e8eaed}.theme-light input:focus+.input-underline::after{background-color:#000}.input{position:relative}.input .input-underline{position:absolute;top:90%;left:0;width:calc(100% - 0.8ch);height:2px;background-color:gray;z-index:1;pointer-events:none}.input .input-underline::after{content:\"\";position:absolute;top:0;left:0;width:0%;height:100%;background-color:#fff;z-index:2;transition:all 300ms ease-in-out}.input .input-underline.input-underline-error::after{width:100%;background-color:red !important}.input .input-nice{position:absolute;font-size:12px;top:calc(100% + 4px)}.theme-dark .input .input-nice{color:#23ce6b}.theme-light .input .input-nice{color:#06bcc1}\n","@import url(\"https://fonts.googleapis.com/css2?family=Rubik:wght@400;500;600&display=swap\");\n\n$rubik: \"Rubik\", sans-serif;\n","html {\n  height: 100%;\n}\n\nbody {\n  margin: 0;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  min-height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n#root {\n  flex: 1;\n  min-height: 100%;\n  display: inherit;\n  flex-direction: inherit;\n}\n\np {\n  margin-block-start: 0;\n  margin-block-end: 0;\n}\n\n.app-container {\n  flex: 1;\n  min-height: 100%;\n  display: inherit;\n  flex-direction: inherit;\n}\n\n.page {\n  @include theme(\"background\", \"background\");\n  @include theme(\"color\", \"text\");\n  font-family: $rubik;\n  text-align: center;\n  flex: 1;\n  display: inherit;\n  flex-direction: inherit;\n  justify-content: space-between;\n\n  position: relative;\n\n  @include breakpoint(0, sm) {\n    padding: 15vh 24px 32px 24px;\n  }\n\n  @include breakpoint(md) {\n    padding: 15vh 10vw 32px 10vw;\n  }\n}\n\n.error {\n  color: red;\n}\n\nform {\n  margin: 0 auto;\n\n  @include breakpoint(0, sm) {\n    width: 100%;\n  }\n\n  @include breakpoint(md) {\n    width: 70vw;\n  }\n\n  .form {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: center;\n    line-height: 200%;\n\n    @include breakpoint(0, xs) {\n      font-size: 1.5rem;\n    }\n\n    @include breakpoint(sm) {\n      font-size: 2rem;\n    }\n\n    span {\n      display: inherit;\n      align-items: inherit;\n      margin: 0 0.7ch;\n    }\n\n    p {\n      @include breakpoint(0, xs) {\n        line-height: 170%;\n      }\n    }\n  }\n\n  .earnings {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    margin-top: 10vh;\n    word-break: break-word;\n\n    .stonks-go-brr {\n      line-height: 200%;\n\n      @include breakpoint(0, xs) {\n        font-size: 2.2rem;\n      }\n\n      @include breakpoint(sm) {\n        font-size: 3rem;\n      }\n\n      strong {\n        @include theme(\"color\", \"stonks\");\n      }\n    }\n\n    ul {\n      list-style: none;\n      padding: 0;\n      margin: 4rem 0;\n\n      li {\n        text-align: left;\n\n        @include breakpoint(0, xs) {\n          font-size: 1.5rem;\n          line-height: 200%;\n        }\n\n        @include breakpoint(sm) {\n          font-size: 2rem;\n          line-height: 300%;\n        }\n\n        &::before {\n          content: \"\\1F680\";\n          padding-right: 1rem;\n        }\n      }\n    }\n  }\n}\n","$theme-colors: (\n  \"dark\": (\n    \"background\": #202124,\n    \"text\": #e8eaed,\n    \"primary\": #83bcff,\n    \"stonks\": #23CE6B,\n  ),\n  \"light\": (\n    \"background\": #f9f9f9,\n    \"text\": #000000,\n    \"primary\": #4e5af1,\n    \"stonks\": #06bcc1,\n  ),\n);\n\n@mixin theme($property, $variant) {\n  @each $theme-name, $theme-variant in $theme-colors {\n    .theme-#{$theme-name} & {\n      #{$property}: map-get(map-get($theme-colors, $theme-name), $variant);\n    }\n  }\n}\n","@mixin breakpoint($min: 0, $max: 0) {\n  $known-breakpoints: xs, sm, md, lg, xl;\n\n  @if not index($known-breakpoints, $min) and type-of($min) != number {\n    @error \"Unknown breakpoint #{$min}.\";\n  }\n\n  @if not index($known-breakpoints, $max) and type-of($max) != number {\n    @error \"Unknown breakpoint #{$max}.\";\n  }\n\n  @if $min == 0 and $max == 0 {\n    @error \"Invalid breakpoints.\";\n  }\n\n  $query: \"all\";\n  $minValue: 0;\n  $maxValue: 0;\n\n  $minBreakpoints: (\n    sm: 576px,\n    md: 768px,\n    lg: 992px,\n    xl: 1200px,\n  );\n\n  $maxBreakpoints: (\n    xs: 575.98px,\n    sm: 767.98px,\n    md: 991.98px,\n    lg: 1199.98px,\n  );\n\n  @if type-of($min) == string {\n    $minValue: map-get($minBreakpoints, $min);\n  } @else if type-of($min) == number {\n    $minValue: #{$min}px;\n  }\n\n  @if type-of($max) == string {\n    $maxValue: map-get($maxBreakpoints, $max);\n  } @else if type-of($max) == number {\n    $maxValue: #{$max}px;\n  }\n\n  @if $max == 0 {\n    $query: \"(min-width: #{$minValue})\";\n  } @else if $min == 0 {\n    $query: \"(max-width: #{$maxValue})\";\n  } @else {\n    $query: \"(min-width: #{$minValue}) and (max-width: #{$maxValue})\";\n  }\n\n  @media #{$query} {\n    @content;\n  }\n}\n",".btn-theme {\n  background: transparent;\n  @include theme(\"color\", \"text\");\n  border: 1px solid transparent;\n  padding: 0;\n  font-family: $rubik;\n  cursor: pointer;\n\n  @include breakpoint(0, xs) {\n    position: absolute;\n    top: 24px;\n    right: 24px;\n  }\n\n  @include breakpoint(sm) {\n    position: fixed;\n    top: 40px;\n    right: 40px;\n  }\n\n  &:focus {\n    outline: none;\n    border-style: dashed;\n    border-width: 1px;\n    border-color: gray;\n  }\n\n  img {\n    height: auto;\n\n    @include breakpoint(0, xs) {\n      width: 80px;\n    }\n\n    @include breakpoint(sm) {\n      width: 100px;\n    }\n  }\n}\n",".recharts-surface {\n  overflow: visible;\n}\n","input {\n  background: transparent;\n  @include theme(\"color\", \"text\");\n  border: none;\n  font-size: inherit;\n  transition: all 100ms ease-in-out;\n  padding: 4px;\n  min-width: 2ch;\n\n  &:focus {\n    outline: none;\n\n    & + .input-underline {\n      &::after {\n        width: 100%;\n        @include theme(\"background-color\", \"text\");\n      }\n    }\n  }\n}\n\n.input {\n  position: relative;\n\n  .input-underline {\n    position: absolute;\n    top: 90%;\n    left: 0;\n    width: calc(100% - 0.8ch);\n    height: 2px;\n    background-color: gray;\n    z-index: 1;\n    pointer-events: none;\n\n    &::after {\n      content: \"\";\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 0%;\n      height: 100%;\n      background-color: white;\n      z-index: 2;\n      transition: all 300ms ease-in-out;\n    }\n\n    &.input-underline-error {\n      &::after {\n        width: 100%;\n        background-color: red !important;\n      }\n    }\n  }\n\n  .input-nice {\n    position: absolute;\n    font-size: 12px;\n    @include theme(\"color\", \"stonks\");\n    top: calc(100% + 4px);\n  }\n}\n"]}